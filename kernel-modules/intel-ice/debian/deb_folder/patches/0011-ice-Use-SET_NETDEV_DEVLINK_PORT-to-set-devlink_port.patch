From bd7dcb9835078e542b13bd8858533e5fef431602 Mon Sep 17 00:00:00 2001
From: Jiping Ma <jiping.ma2@windriver.com>
Date: Thu, 29 Feb 2024 09:25:30 +0000
Subject: [PATCH 11/16] ice: Use SET_NETDEV_DEVLINK_PORT to set devlink_port

This commit applies a subset of the changes in commit ac73d4bf2cda
("net: make drivers to use SET_NETDEV_DEVLINK_PORT to set devlink_port"),
merged in the v6.2 development cycle, to resolve compilation errors
encountered with the v6.6 kernel when building the out-of-tree ice driver.

In addition, we also swap the order of register_netdev and
SET_NETDEV_DEVLINK_PORT in ice_register_netdev() to fix the following
kernel warning:

WARNING: CPU: 0 PID: 966 at ice-1.9.11/src/ice_main.c:5740 \
  ice_probe+0x155b/0x16b0 [ice]"

References:
* https://git.yoctoproject.org/linux-yocto/commit/?h=ac73d4bf2cda

Signed-off-by: Jiping Ma <jiping.ma2@windriver.com>
---
 src/ice_devlink.c | 14 ++------------
 src/ice_main.c    | 20 ++++++++++----------
 src/ice_repr.c    |  9 ++++-----
 3 files changed, 16 insertions(+), 27 deletions(-)

diff --git a/src/ice_devlink.c b/src/ice_devlink.c
index 41b7046..4878626 100644
--- a/src/ice_devlink.c
+++ b/src/ice_devlink.c
@@ -1191,12 +1191,7 @@ int ice_devlink_create_pf_port(struct ice_pf *pf)
  */
 void ice_devlink_destroy_pf_port(struct ice_pf *pf)
 {
-	struct devlink_port *devlink_port;
-
-	devlink_port = &pf->devlink_port;
-
-	devlink_port_type_clear(devlink_port);
-	devlink_port_unregister(devlink_port);
+	devlink_port_unregister(&pf->devlink_port);
 }
 
 #ifdef HAVE_DEVLINK_PORT_ATTR_PCI_VF
@@ -1254,12 +1249,7 @@ int ice_devlink_create_vf_port(struct ice_vf *vf)
  */
 void ice_devlink_destroy_vf_port(struct ice_vf *vf)
 {
-	struct devlink_port *devlink_port;
-
-	devlink_port = &vf->devlink_port;
-
-	devlink_port_type_clear(devlink_port);
-	devlink_port_unregister(devlink_port);
+	devlink_port_unregister(&vf->devlink_port);
 }
 #endif /* HAVE_DEVLINK_PORT_ATTR_PCI_VF */
 
diff --git a/src/ice_main.c b/src/ice_main.c
index 3cbbe17..728eab2 100644
--- a/src/ice_main.c
+++ b/src/ice_main.c
@@ -5740,6 +5740,13 @@ static int ice_register_netdev(struct ice_pf *pf)
 	if (!vsi || !vsi->netdev)
 		return -EIO;
 
+#if IS_ENABLED(CONFIG_NET_DEVLINK)
+	err = ice_devlink_create_pf_port(pf);
+	if (err)
+		goto err_devlink_create;
+
+	SET_NETDEV_DEVLINK_PORT(vsi->netdev, &pf->devlink_port);
+#endif /* CONFIG_NET_DEVLINK */
 	err = register_netdev(vsi->netdev);
 	if (err)
 		goto err_register_netdev;
@@ -5747,21 +5754,14 @@ static int ice_register_netdev(struct ice_pf *pf)
 	set_bit(ICE_VSI_NETDEV_REGISTERED, vsi->state);
 	netif_carrier_off(vsi->netdev);
 	netif_tx_stop_all_queues(vsi->netdev);
-#if IS_ENABLED(CONFIG_NET_DEVLINK)
-	err = ice_devlink_create_pf_port(pf);
-	if (err)
-		goto err_devlink_create;
-
-	devlink_port_type_eth_set(&pf->devlink_port, vsi->netdev);
-#endif /* CONFIG_NET_DEVLINK */
 
 	return 0;
+
+err_register_netdev:
 #if IS_ENABLED(CONFIG_NET_DEVLINK)
+	ice_devlink_destroy_pf_port(pf);
 err_devlink_create:
-	unregister_netdev(vsi->netdev);
-	clear_bit(ICE_VSI_NETDEV_REGISTERED, vsi->state);
 #endif /* CONFIG_NET_DEVLINK */
-err_register_netdev:
 	free_netdev(vsi->netdev);
 	vsi->netdev = NULL;
 	clear_bit(ICE_VSI_NETDEV_ALLOCD, vsi->state);
diff --git a/src/ice_repr.c b/src/ice_repr.c
index bc00dad..26e254e 100644
--- a/src/ice_repr.c
+++ b/src/ice_repr.c
@@ -437,15 +437,14 @@ static int ice_repr_add(struct ice_vf *vf)
 #endif /* CONFIG_NET_DEVLINK */
 
 	SET_NETDEV_DEV(repr->netdev, ice_pf_to_dev(vf->pf));
-	err = ice_repr_reg_netdev(repr->netdev);
-	if (err)
-		goto err_netdev;
-
 #if IS_ENABLED(CONFIG_NET_DEVLINK)
 #ifdef HAVE_DEVLINK_PORT_ATTR_PCI_VF
-	devlink_port_type_eth_set(&vf->devlink_port, repr->netdev);
+	SET_NETDEV_DEVLINK_PORT(repr->netdev, &vf->devlink_port);
 #endif /* HAVE_DEVLINK_PORT_ATTR_PCI_VF */
 #endif /* CONFIG_NET_DEVLINK */
+	err = ice_repr_reg_netdev(repr->netdev);
+	if (err)
+		goto err_netdev;
 
 	ice_virtchnl_set_repr_ops(vf);
 
-- 
2.43.0

