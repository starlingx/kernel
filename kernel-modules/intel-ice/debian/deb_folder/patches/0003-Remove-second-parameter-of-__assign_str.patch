From fcf1aaf74aefb223252935969e81893360a5842d Mon Sep 17 00:00:00 2001
From: Jiping Ma <jiping.ma2@windriver.com>
Date: Thu, 20 Mar 2025 10:09:31 +0000
Subject: [PATCH 03/10] Remove second parameter of __assign_str()

This commit accommodates commit 2c92ca849fcc("tracing/treewide: Remove 
second parameter of __assign_str()") which removes second parameter of
 __assign_str(). This commit was merged in the v6.10 development cycle
and causes compilation failures with the v6.12 kernel, which are listed 
below.

References:
* https://git.yoctoproject.org/linux-yocto/commit/?h=2c92ca849fcc

Resolved compilation errors:

ice_trace.h:147:8: error: __assign_str undeclared (first use in this function)
  147 |        __assign_str(devname, q_vector->tx.tx_ring->netdev->name);),
      |        ^~~~~~~~~~~~

Signed-off-by: Jiping Ma <jiping.ma2@windriver.com>
---
 src/ice_trace.h | 19 +++++++++----------
 1 file changed, 9 insertions(+), 10 deletions(-)

diff --git a/src/ice_trace.h b/src/ice_trace.h
index 839647a..fe3d414 100644
--- a/src/ice_trace.h
+++ b/src/ice_trace.h
@@ -88,7 +88,7 @@ DECLARE_EVENT_CLASS(ice_print_msg,
 
 		    TP_STRUCT__entry(__string(msg, msg)),
 
-		    TP_fast_assign(__assign_str(msg, msg);),
+		    TP_fast_assign(__assign_str(msg);),
 
 		    TP_printk("%s", __get_str(msg))
 );
@@ -117,7 +117,7 @@ DECLARE_EVENT_CLASS(ice_rx_dim_template,
 
 		    TP_fast_assign(__entry->q_vector = q_vector;
 				   __entry->dim = dim;
-				   __assign_str(devname, q_vector->rx.rx_ring->netdev->name);),
+				   __assign_str(devname);),
 
 		    TP_printk("netdev: %s Rx-Q: %d dim-state: %d dim-profile: %d dim-tune: %d dim-st-right: %d dim-st-left: %d dim-tired: %d",
 			      __get_str(devname),
@@ -144,7 +144,7 @@ DECLARE_EVENT_CLASS(ice_tx_dim_template,
 
 		    TP_fast_assign(__entry->q_vector = q_vector;
 				   __entry->dim = dim;
-				   __assign_str(devname, q_vector->tx.tx_ring->netdev->name);),
+				   __assign_str(devname);),
 
 		    TP_printk("netdev: %s Tx-Q: %d dim-state: %d dim-profile: %d dim-tune: %d dim-st-right: %d dim-st-left: %d dim-tired: %d",
 			      __get_str(devname),
@@ -176,7 +176,7 @@ DECLARE_EVENT_CLASS(ice_tx_template,
 		    TP_fast_assign(__entry->ring = ring;
 				   __entry->desc = desc;
 				   __entry->buf = buf;
-				   __assign_str(devname, ring->netdev->name);),
+				   __assign_str(devname);),
 
 		    TP_printk("netdev: %s ring: %p desc: %p buf %p", __get_str(devname),
 			      __entry->ring, __entry->desc, __entry->buf)
@@ -204,7 +204,7 @@ DECLARE_EVENT_CLASS(ice_rx_template,
 
 		    TP_fast_assign(__entry->ring = ring;
 				   __entry->desc = desc;
-				   __assign_str(devname, ring->netdev->name);),
+				   __assign_str(devname);),
 
 		    TP_printk("netdev: %s ring: %p desc: %p", __get_str(devname),
 			      __entry->ring, __entry->desc)
@@ -228,7 +228,7 @@ DECLARE_EVENT_CLASS(ice_rx_indicate_template,
 		    TP_fast_assign(__entry->ring = ring;
 				   __entry->desc = desc;
 				   __entry->skb = skb;
-				   __assign_str(devname, ring->netdev->name);),
+				   __assign_str(devname);),
 
 		    TP_printk("netdev: %s ring: %p desc: %p skb %p", __get_str(devname),
 			      __entry->ring, __entry->desc, __entry->skb)
@@ -251,7 +251,7 @@ DECLARE_EVENT_CLASS(ice_xmit_template,
 
 		    TP_fast_assign(__entry->ring = ring;
 				   __entry->skb = skb;
-				   __assign_str(devname, ring->netdev->name);),
+				   __assign_str(devname);),
 
 		    TP_printk("netdev: %s skb: %p ring: %p", __get_str(devname),
 			      __entry->skb, __entry->ring)
@@ -285,9 +285,8 @@ DECLARE_EVENT_CLASS(ice_tx_tstamp_template,
 				     __field(u8, calibrating)),
 
 		    TP_fast_assign(lockdep_assert_held(&tx->lock);
-				   __assign_str(dev_name, dev_name(dev));
-				   __assign_str(netdev_name,
-						netdev_name(skb->dev));
+				   __assign_str(dev_name);
+				   __assign_str(netdev_name);
 				   __entry->skb = skb;
 				   __entry->seq = ice_ptp_get_seq_id(skb);
 				   __entry->idx = idx;
-- 
2.47.1

