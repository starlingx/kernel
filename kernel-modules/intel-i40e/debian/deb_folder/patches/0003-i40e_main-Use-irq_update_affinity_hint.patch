From 209dceb1559491b4415645df53fa3949f1e3a6db Mon Sep 17 00:00:00 2001
From: "M. Vefa Bicakci" <vefa.bicakci@windriver.com>
Date: Fri, 14 Jan 2022 17:25:25 -0500
Subject: [PATCH 03/10] i40e_main: Use irq_update_affinity_hint

This commit makes i40e_main use irq_update_affinity_hint instead of
irq_set_affinity_hint to set the CPU affinity hints. This is done
because the latter function sets the IRQ CPU affinities, whereas the
former does not, and this allows the use of the default IRQ affinity CPU
mask provided via the irqaffinity= kernel command line option.

This commit essentially replicates the i40e patch in the following
patch series:
  https://lore.kernel.org/netdev/20210903152430.244937-1-nitesh@redhat.com/t/#u

The i40e patch has been mainlined as of this writing:
  https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=d34c54d1739c2cdf2e4437b74e6da269147f4987

Signed-off-by: M. Vefa Bicakci <vefa.bicakci@windriver.com>
---
 src/i40e_main.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/i40e_main.c b/src/i40e_main.c
index 88050c6..1319cfa 100644
--- a/src/i40e_main.c
+++ b/src/i40e_main.c
@@ -5034,10 +5034,10 @@ int i40e_vsi_request_irq_msix(struct i40e_vsi *vsi, char *basename)
 		 *
 		 * get_cpu_mask returns a static constant mask with
 		 * a permanent lifetime so it's ok to pass to
-		 * irq_set_affinity_hint without making a copy.
+		 * irq_update_affinity_hint without making a copy.
 		 */
 		cpu = cpumask_local_spread(q_vector->v_idx, -1);
-		irq_set_affinity_hint(irq_num, get_cpu_mask(cpu));
+		irq_update_affinity_hint(irq_num, get_cpu_mask(cpu));
 #endif /* HAVE_IRQ_AFFINITY_HINT */
 	}
 
@@ -5052,7 +5052,7 @@ free_queue_irqs:
 		irq_set_affinity_notifier(irq_num, NULL);
 #endif
 #ifdef HAVE_IRQ_AFFINITY_HINT
-		irq_set_affinity_hint(irq_num, NULL);
+		irq_update_affinity_hint(irq_num, NULL);
 #endif
 		free_irq(irq_num, &vsi->q_vectors[vector]);
 	}
@@ -5868,7 +5868,7 @@ static void i40e_vsi_free_irq(struct i40e_vsi *vsi)
 #endif
 #ifdef HAVE_IRQ_AFFINITY_HINT
 			/* remove our suggested affinity mask for this IRQ */
-			irq_set_affinity_hint(irq_num, NULL);
+			irq_update_affinity_hint(irq_num, NULL);
 #endif
 			synchronize_irq(irq_num);
 			free_irq(irq_num, vsi->q_vectors[i]);
-- 
2.42.0

