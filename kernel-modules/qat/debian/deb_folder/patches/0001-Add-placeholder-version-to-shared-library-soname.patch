From 9413df478277bc8dd55fc17aee3c5423497e6e0d Mon Sep 17 00:00:00 2001
From: "M. Vefa Bicakci" <vefa.bicakci@windriver.com>
Date: Mon, 11 Dec 2023 10:33:55 -0500
Subject: [PATCH 1/3] Add placeholder version to shared library soname

This patch adds a placeholder version ("0") to the user-space shared
libraries built by the qat2.0.l package, so that Debian packaging tools
such as dpkg-shlibdeps can utilize the built shared libraries for
dependency-tracking purposes.

In more detail, as part of the StarlingX packaging, the qat2.0.l-common
Debian package (built from qat2.0.l) includes two shared libraries:
"libqat_s.so" and "libusdm_drv_s.so", and the version information
associated with these libraries is not discoverable by dpkg-shlibdeps,
which results in warning messages like the following during the build:

  dpkg-shlibdeps: warning: can't extract name and version from \
    library name 'libqat_s.so'

These warnings occur because dpkg-shlibdeps looks for one of the
following file name formats in shared libraries, to be able to determine
their versions: "<basename>.so.<version>" or "<basename>-<version>.so",
as seen at the following link:

https://sources.debian.org/src/dpkg/1.20.13/scripts/dpkg-shlibdeps.pl/#L706

Because of the aforementioned warnings, other Debian packages that
depend on "libqat_s.so" or "libusdm_drv_s.so" (such as the "qzip" binary
in the qatzip package) are unable to automatically depend on the
qat2.0.l-common package via the "Depends: ${shlibs:Depends}" directive
in their debian/control files, and the dependent packages' builds print
out similar dpkg-shlibdeps warnings as well.

We resolve this issue by adding a placeholder version number ("0") to
the shared libraries' "soname" fields, and then symbolically linking the
*non*-versioned file names to the versioned file names in the packaging.

The "-soname" option allows the dynamic linker to always use the
versioned file names when attempting to resolve missing dynamic symbols,
which allows the executables built by qat2.0.l and qatzip (and other
future dependent packages) to automatically request the versioned shared
library file names at runtime.

Furthermore, this is also consistent with other shared libraries in
Debian and hence StarlingX:

```
$ readelf -d /lib/x86_64-linux-gnu/libpthread.so | grep soname
 0x000000000000000e (SONAME)           Library soname: [libpthread.so.0]

$ readelf -d /lib/x86_64-linux-gnu/libz.so | grep soname
 0x000000000000000e (SONAME)           Library soname: [libz.so.1]

$ ls -l /lib/x86_64-linux-gnu/libz.so /lib/x86_64-linux-gnu/libpthread.so
lrwxrwxrwx 3 ... /lib/x86_64-linux-gnu/libpthread.so -> \
  /lib/x86_64-linux-gnu/libpthread.so.0
lrwxrwxrwx 3 ... /lib/x86_64-linux-gnu/libz.so -> \
  /lib/x86_64-linux-gnu/libz.so.1.2.11
```

As an alternative solution, we have attempted renaming and symbolically
linking the shared libraries as part of the packaging procedure, but we
found that these are insufficient, because the dynamic linker still
prefers the non-versioned shared library file names with such
workarounds, which results in the same warnings from dpkg-shlibdeps.

Finally, we realize that we could have used the full version of the
qat2.0.l package ("1.0.20-00008" at the time of writing this patch) or a
partial substring, but we opted to use "0" as a placeholder version for
the sake of simplicity.

Signed-off-by: M. Vefa Bicakci <vefa.bicakci@windriver.com>
---
 quickassist/build_system/build_files/OS/linux_2.6.mk | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/quickassist/build_system/build_files/OS/linux_2.6.mk b/quickassist/build_system/build_files/OS/linux_2.6.mk
index 237084c..19432bd 100644
--- a/quickassist/build_system/build_files/OS/linux_2.6.mk
+++ b/quickassist/build_system/build_files/OS/linux_2.6.mk
@@ -61,7 +61,7 @@ EXTRA_CFLAGS+= -Wno-div-by-zero -Wfloat-equal -Wtraditional  -Wundef -Wno-endif-
 endif
 
 
-LIB_SHARED_FLAGS+=-shared -soname $(LIB_SHARED)
+LIB_SHARED_FLAGS+=-shared -soname $(LIB_SHARED).0
 LIB_STATIC_FLAGS=
 EXE_FLAGS?=
 
-- 
2.42.0

